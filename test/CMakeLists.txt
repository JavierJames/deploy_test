cmake_minimum_required(VERSION 2.8.2)

enable_testing()

# Download and unpack googletest at configure time
configure_file(CMakeLists.txt.in googletest-download/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
if(result)
  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
endif()
execute_process(COMMAND ${CMAKE_COMMAND} --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
if(result)
  message(FATAL_ERROR "Build step for googletest failed: ${result}")
endif()

# Prevent overriding the parent project's compiler/linker
# settings on Windows
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

# Add googletest directly to our build. This defines
# the gtest and gtest_main targets.
add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/googletest-src
                 ${CMAKE_CURRENT_BINARY_DIR}/googletest-build
                 EXCLUDE_FROM_ALL)

# The gtest/gtest_main targets carry header search path
# dependencies automatically when using CMake 2.8.11 or
# later. Otherwise we have to add them here ourselves.
if (CMAKE_VERSION VERSION_LESS 2.8.11)
  include_directories("${gtest_SOURCE_DIR}/include")
endif()

# Add path to source files
include_directories(
    ${PROJECT_SOURCE_DIR}/support
    ${PROJECT_SOURCE_DIR}/fakes
    ${PROJECT_SOURCE_DIR}/../main/blue/ota
    ${PROJECT_SOURCE_DIR}/../main/blue/ble
    ${PROJECT_SOURCE_DIR}/../main/comms
    ${PROJECT_SOURCE_DIR}/../main/system
    ${PROJECT_SOURCE_DIR}/../main/uta
    ${PROJECT_SOURCE_DIR}/../main
    ${PROJECT_SOURCE_DIR}/../components/hal/hal-tdd
    ${PROJECT_SOURCE_DIR}/../components/hal
)

# Define TDD flag used in sources
add_definitions(-DTDD)

# -----------------------------------------------------------------------------
# 1. Add files to be compiled
# 2. Link target & GoogleTest libs

add_executable(nmea
    ${PROJECT_SOURCE_DIR}/../components/hal/hal-tdd/HAL_TDD.cpp
    TestNMEAPkt.cpp ${PROJECT_SOURCE_DIR}/../main/comms/NMEAPkt.cpp
)
target_link_libraries(nmea gtest gtest_main gmock)
add_test(NAME TestNMEAPkt COMMAND nmea)


add_executable(sysinfo
    ${PROJECT_SOURCE_DIR}/../components/hal/hal-tdd/HAL_TDD.cpp
    TestSysInfo.cpp ${PROJECT_SOURCE_DIR}/../main/system/SysInfo.cpp
)
target_link_libraries(sysinfo gtest gtest_main gmock)
add_test(NAME TestSysInfo COMMAND sysinfo)


add_executable(bleadv
    ${PROJECT_SOURCE_DIR}/../components/hal/hal-tdd/HAL_TDD.cpp
    TestBleAdv.cpp ${PROJECT_SOURCE_DIR}/../main/blue/ble/ble_adv_conf.cpp
)
target_link_libraries(bleadv gtest gtest_main gmock)
add_test(NAME TestBleAdv COMMAND bleadv)

add_executable(groupinfo
    ${PROJECT_SOURCE_DIR}/../components/hal/hal-tdd/HAL_TDD.cpp
    ${PROJECT_SOURCE_DIR}/../main/system/helper.cpp
    TestGroupInfo.cpp ${PROJECT_SOURCE_DIR}/../main/comms/GroupInfo.cpp
)
target_link_libraries(groupinfo gtest gtest_main gmock)
add_test(NAME TestGroupInfo COMMAND groupinfo)

# add_executable(picota
#     ${PROJECT_SOURCE_DIR}/../components/hal/hal-tdd/HAL_TDD.cpp
#     ${PROJECT_SOURCE_DIR}/support/TestGlobals.cpp
#     ${PROJECT_SOURCE_DIR}/fakes/esp_ota_ops.h
#     ${PROJECT_SOURCE_DIR}/../main/comms/OTAPkt.cpp
#     ${PROJECT_SOURCE_DIR}/../main/comms/NMEAPkt.cpp
#     ${PROJECT_SOURCE_DIR}/../main/system/helper.cpp
#     ${PROJECT_SOURCE_DIR}/../main/blue/ota/OTAUpdate.cpp
#     ${PROJECT_SOURCE_DIR}/../main/blue/ota/PICUpdate.cpp
#     ${PROJECT_SOURCE_DIR}/../main/blue/ota/ESPUpdate.cpp
#     TestOTAUpdate.cpp
# )
# target_link_libraries(picota gtest gtest_main gmock)
# add_test(NAME TestOTAUpdate COMMAND picota)

add_executable(utadataset
    ${PROJECT_SOURCE_DIR}/../components/hal/hal-tdd/HAL_TDD.cpp
    ${PROJECT_SOURCE_DIR}/fakes/SysInfo.cpp
    ${PROJECT_SOURCE_DIR}/../main/uta/dataset.hpp
    ${PROJECT_SOURCE_DIR}/../main/blue/ble/ble_adv_conf.cpp
    ${PROJECT_SOURCE_DIR}/../main/system/helper.cpp
    TestUTADataset.cpp ${PROJECT_SOURCE_DIR}/../main/uta/dataset.cpp
)
target_link_libraries(utadataset gtest gtest_main gmock)
add_test(NAME TestUTADataset COMMAND utadataset)


SET(CMAKE_CXX_FLAGS "-std=c++11 -O3")