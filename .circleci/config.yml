version: 2
jobs:
  test:
    working_directory: ~/esp32-firmware/
    docker:
      - image: rikorose/gcc-cmake
    steps:
      - checkout
      - run: cd test && cmake .
      - run: cd test && make all test
  
  build:
    working_directory: ~/esp32-firmware/
    docker:
        - image: kienaudio/esp-idf-ci-env:v4.1
    steps:
      - checkout
      - run:
          command: |
            echo "Building"
            echo "IDF_PATH := $IDF_PATH" > Makefile.local
            mkdir ~/repo/
            ls   
            cd ~/repo/

      - run: 
          command: |
            cd $IDF_PATH
            . $IDF_PATH/export.sh
            cd ~/esp32-firmware/
            make size
            make CONFIG_IS_SUBWOOFER=1 all
            make CONFIG_IS_SUBWOOFER=1 size


  finalize-release: 
    working_directory: ~/esp32-firmware/
    docker:
      - image: kienaudio/deploy_tools:v0.5 
    steps:
      - checkout
      - run:
          command: |
            echo "Finalizing firmware release"  
            cd ~/esp32-firmware/
            git rev-parse --abbrev-ref HEAD
            # python3  $DEPLOY_TOOLS_PATH/kdm.py -p prod -t finish -rv v0.0.2


  deploy-prod:
    docker:
      - image: kienaudio/deploy_tools:v0.5 
    steps:
      - checkout
      - run:
          command: |
            echo "Deploying firmware to production environment"  
            echo $DEPLOY_TOOLS_PATH
            cd $DEPLOY_TOOLS_PATH/deploy_manager
            python3 deploy.py -h


  deploy-test:
    docker:
      - image: kienaudio/deploy_tools:v0.5    
    steps:
      - checkout
      - run:
          command: |
            echo "Deploying firmware to test environment"
            echo $DEPLOY_TOOLS_PATH
            cd $DEPLOY_TOOLS_PATH/deploy_manager
            python3 file_encoder.py -h


workflows:
  version: 2
  build_and_test_and_deploy:
    jobs:
      - build
      - test

     - wait-release-approval:
          type: approval
          requires:
            - build 
            - test
      - finalize-release: 
        requires:
          - wait-release-approval 
        filters:
          - branches:
            only:  /release\/.*/


      - wait-deploy-prod-approval:
          type: approval
          requires:
            - test
          # filters: 
          #   branches:
          #     only: master   
      
      #Run deploy-test only when current branch only when the current branch is the master branch
      #Requires manual approval from CircleCI pipeline home page 
      - deploy-prod:
          requires: 
            - wait-deploy-prod-approval   
          # filters: 
          #   branches:
          #     only: master

      #Run deploy-test only when current branch is not the master branch        
      - deploy-test:
          requires: 
            - test   
          filters: 
            branches:
              ignore: master  
